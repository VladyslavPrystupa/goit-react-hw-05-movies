{"version":3,"file":"static/js/310.60ec6fdd.chunk.js","mappings":"oOAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGD,EADE,KAQlB,E,SCmBD,EAxBgB,WACd,IAAQE,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAU,IAEVE,EAAAA,EAAAA,IAAaP,GACVQ,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQR,GAAU,GACtB,GAAE,CAACL,KAGF,2BACGI,IAAU,SAACU,EAAA,EAAD,IAES,IAAnBlB,EAAQmB,SAAgB,uCACzB,SAACpB,EAAD,CAAaC,QAASA,MAG3B,C,8LC1BKoB,EAAW,gCACXC,EAAM,mCAECC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,KAHc,cACrBK,EADqB,yBAOpBA,EAASC,KAAKC,SAPM,2CAAH,qDAUbC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BS,IAFnB,cAC1BJ,EAD0B,yBAKzBA,EAASC,KAAKC,SALW,2CAAH,sDAQlBG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BY,GAAM,CAC1DR,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,sDAUZhB,EAAY,mCAAG,WAAMqB,GAAN,uFACHT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BY,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUZK,EAAS,mCAAG,WAAMD,GAAN,uFACAT,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BY,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAOhBA,EAASC,KAAKO,MAPE,2CAAH,qD","sources":["components/MovieReview.jsx","pages/Reviews.jsx","services/api.js"],"sourcesContent":["export const MovieReview = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(({ author, content }) => (\n        <li key={author}>\n          <h3>{author}</h3>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from 'services/api';\nimport { MovieReview } from 'components/MovieReview';\nimport { Loader } from 'components/Loader';\n\nconst Reviews = () => {\n  const { filmId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    fetchReviews(filmId)\n      .then(setReviews)\n      .catch(error => console.log(error))\n      .finally(setLoader(false));\n  }, [filmId]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n\n      {reviews.length === 0 && <p>no reviews</p>}\n      <MovieReview reviews={reviews} />\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchMovieId = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.cast;\n};\n"],"names":["MovieReview","reviews","map","author","content","filmId","useParams","useState","setReviews","loader","setLoader","useEffect","fetchReviews","then","catch","error","console","log","finally","Loader","length","BASE_URL","KEY","fetchTrending","axios","params","api_key","response","data","results","fetchMoviesByQuery","query","fetchMovieId","id","fetchCast","cast"],"sourceRoot":""}