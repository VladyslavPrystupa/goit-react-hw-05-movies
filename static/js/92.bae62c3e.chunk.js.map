{"version":3,"file":"static/js/92.bae62c3e.chunk.js","mappings":"0OAEaA,EAAQ,SAAC,GAEf,IAAD,IADJC,MAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,eAAgBC,EAClC,EADkCA,MAAOC,EACzC,EADyCA,aAAcC,EACvD,EADuDA,SAAUC,EACjE,EADiEA,OAErE,OACE,+BAEE,iBAAKC,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,WACE,gBACEC,IAAG,6CAAwCT,GAC3CU,IAAKT,EACLU,OAAO,SAET,4BACE,kCAAQT,MACR,wCAAgBC,EAAhB,QACA,wCACA,yBAAIC,EAAJ,QACA,oCACA,+BACGC,QADH,IACGA,OADH,EACGA,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,wBAAcA,GAALD,EADE,aAQxB,E,SCaD,EApCsB,WAAO,IAAD,IAClBE,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOlB,EAAP,KAAcmB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAQhD,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaX,GACVY,KAAKT,GACLU,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAV,GACf,GAAE,CAACd,KAGF,iCACE,SAAC,KAAD,CAAMgB,GAAIV,EAASW,QAAnB,UACE,2CAEF,SAAClC,EAAD,CAAOC,MAAOA,KAEd,oDAEA,2BACE,yBACE,SAAC,KAAD,CAAMgC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,8LCtCKC,EAAW,gCACXC,EAAM,mCAECC,EAAa,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,sBAA2C,CAChEI,OAAQ,CACNC,QAASJ,KAHc,cACrBK,EADqB,yBAOpBA,EAASC,KAAKC,SAPM,2CAAH,qDAUbC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBAC4BS,IAFnB,cAC1BJ,EAD0B,yBAKzBA,EAASC,KAAKC,SALW,2CAAH,sDAQlBlB,EAAY,mCAAG,WAAMb,GAAN,uFACH0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BvB,GAAM,CAC1D2B,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,sDAUZI,EAAY,mCAAG,WAAMlC,GAAN,uFACH0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BvB,EAA/B,YAA6C,CAClE2B,OAAQ,CACNC,QAASJ,KAHa,cACpBK,EADoB,yBAOnBA,EAASC,KAAKC,SAPK,2CAAH,sDAUZI,EAAS,mCAAG,WAAMnC,GAAN,uFACA0B,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BvB,EAA/B,YAA6C,CAClE2B,OAAQ,CACNC,QAASJ,KAHU,cACjBK,EADiB,yBAOhBA,EAASC,KAAKM,MAPE,2CAAH,qD","sources":["components/Movie.jsx","pages/SelectedMovie.jsx","services/api.js"],"sourcesContent":["// import BackButton from './BackButton';\n\nexport const Movie = ({\n  movie: { poster_path, original_title, title, vote_average, overview, genres },\n}) => {\n  return (\n    <>\n      {/* <BackButton /> */}\n      <div style={{ display: 'flex', gap: '30px' }}>\n        <img\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          alt={original_title}\n          height=\"300\"\n        />\n        <div>\n          <h2>{`${title}`}</h2>\n          <p>user score: {vote_average} </p>\n          <h3>Overview: </h3>\n          <p>{overview} </p>\n          <p>Genres:</p>\n          <ul>\n            {genres?.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieId } from 'services/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Movie } from 'components/Movie';\nimport { Loader } from 'components/Loader';\n\nconst SelectedMovie = () => {\n  const { filmId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMovieId(filmId)\n      .then(setMovie)\n      .catch(error => alert(error));\n  }, [filmId]);\n\n  return (\n    <>\n      <Link to={backLink.current}>\n        <button>go back</button>\n      </Link>\n      <Movie movie={movie} />\n\n      <h2>Additional information</h2>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default SelectedMovie;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'd03712107dcdd723f1173c5ee2c0d8c1';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`${BASE_URL}trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nexport const fetchMovieId = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.cast;\n};\n"],"names":["Movie","movie","poster_path","original_title","title","vote_average","overview","genres","style","display","gap","src","alt","height","map","id","name","filmId","useParams","useState","setMovie","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieId","then","catch","error","alert","to","current","Suspense","fallback","Loader","BASE_URL","KEY","fetchTrending","axios","params","api_key","response","data","results","fetchMoviesByQuery","query","fetchReviews","fetchCast","cast"],"sourceRoot":""}